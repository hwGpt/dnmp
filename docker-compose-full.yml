version: "3"
# 网络配置
networks:
  default:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/www
      - ./services/nginx/ssl:/ssl
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/fastcgi-php.conf:/etc/nginx/fastcgi-php.conf
      - ./services/nginx/fastcgi_params:/etc/nginx/fastcgi_params
      - ./logs/nginx:/var/log/nginx
    restart: always
    networks:
      - default

  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php
    volumes:
      - ${SOURCE_DIR}:/www/:cached
      - ${PHP_CONF_FILE}:/usr/local/etc/php/php.ini:cached
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:cached
      - ${PHP_LOG_DIR}:/var/log/php:cached
      - ${DATA_DIR}/composer:/tmp/composer
      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
    restart: always
    cap_add:
      - SYS_PTRACE
    command:
      - /bin/sh
      - -c
      - |
        supervisord -n -c /etc/supervisor/supervisord.conf
    networks:
      - default

#  openresty:
#    image:  openresty/openresty:${OPENRESTY_VERSION}
#    container_name: openresty
#    ports:
#       - "${OPENRESTY_HTTP_HOST_PORT}:80"
#       - "${OPENRESTY_HTTPS_HOST_PORT}:443"
#    volumes:
#       - ${SOURCE_DIR}:/www/:rw
#       - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
#       - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
#       - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
#       - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
#       - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
#       - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    networks:
#      - default

  jenkins:
    image: jenkinsci/blueocean
    container_name: jenkins
    ports:
      - "${Jenkins_HOST_PORT}:8080"
      - '50000:50000'
    environment:
      TZ: "$TZ"
    volumes:
      - ${Jenkins_DIR}:/var/jenkins_home
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  postgresql:
    image: postgres:16-alpine
    container_name: postgresql
    ports:
      - "${PGSQL_PORT}:5432"
    volumes:
      - ${PGSQL_DATA_DIR}:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      TZ: Asia/Shanghai
      PGTZ: Asia/Shanghai
    networks:
      - default


  memcached:
    image: memcached:${MEMCACHED_VERSION}
    container_name: memcached
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    environment:
       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
    networks:
      - default

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
       TZ: "$TZ"
       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
          - default

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
        - "${MONGODB_HOST_PORT}:27017"
    networks:
        - default
    command:
        --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=27017
    networks:
      - default

  elasticsearch:
    build:
      context: ./services/elasticsearch
      args:
        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
    container_name: elasticsearch
    environment:
      - TZ=$TZ
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
    hostname: elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

  kibana:
    image: kibana:${KIBANA_VERSION}
    container_name: kibana
    environment:
      TZ: "$TZ"
      elasticsearch.hosts: http://elasticsearch:9200
    hostname: kibana
    depends_on:
      - elasticsearch
    restart: always
    ports:
      - "${KIBANA_HOST}:5601"

  etcd:                                 
    build:
      context: ./services/etcd                  
    container_name: etcd
    restart: always
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_LISTEN_CLIENT_URLS=${ETCD_LISTEN_CLIENT_URLS}         
      - ETCD_ADVERTISE_CLIENT_URLS=${ETCD_ADVERTISE_CLIENT_URLS}       
    ports:                             
      - "${ETCD_PORT}:2379"
    networks:
      - default     

  logstash:
    image: logstash:${LOGSTASH_VERSION}
    container_name: logstash
    hostname: logstash
    restart: always
    depends_on:
      - elasticsearch
    environment:
      TZ: "$TZ"
    ports:
      - "${LOGSTASH_HOST_PORT_C}:9600"
      - "${LOGSTASH_HOST_PORT_S}:5044"

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - 9000:9000
    command: server /data  #指定容器中的目录 /data
    environment:
      MINIO_ACCESS_KEY: minio    #管理后台用户名
      MINIO_SECRET_KEY: minioxxx #管理后台密码，最小8个字符
    volumes:
      - ./data:/data              #映射当前目录下的data目录至容器内/data目录
      - ./config:/root/.minio/     #映射配置目录
      

  portainer:
    image: ${PORTAINER_VERSION}
    container_name: portainer
    ports:
      - "${PORTAINER_HOST_PORT}:9000"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:cached
      - ${PORTAINER_DATA_DIR}:/data:cached
    networks:
      - default 

  gitea:
    image: gitea/gitea:1.16.6
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=mysql
      - DB_HOST=mysql:3306
      - DB_NAME=gitea
      - DB_USER=root
      - DB_PASSWD=123456
    restart: always
    networks:
      - default
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
       - "3000:3000"
       - "222:22"
    depends_on:
       - mysql

  # node:
  #   image: node:${NODE_VERSION}
  #   environment:
  #     - NODE_ENV=production
  #   container_name: node
  #   restart: always  
  #   volumes:
  #     - ${SOURCE_DIR}:/www/:rw
  #   expose:
  #     - "6001"
  #   networks:
  #     - default
  #   stdin_open: true
  #   tty: true   