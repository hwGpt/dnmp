# 网络配置
networks:
  default:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/www
      - ./services/nginx/ssl:/ssl
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/fastcgi-php.conf:/etc/nginx/fastcgi-php.conf
      - ./services/nginx/fastcgi_params:/etc/nginx/fastcgi_params
      - ./logs/nginx:/var/log/nginx
    restart: always
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
       TZ: "$TZ"
       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
      - default

  zookeeper:
    image:  bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_HOST_PORT}:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - default

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    user: root
    ports:
      - "${KAFKA_HOST_PORT}:9092"
    volumes:
      - ${KAFKA_DATA_DIR}:/bitnami/kafka
      #- /etc/kafka/config:/opt/bitnami/kafka/config  #配置文件挂载一般挂宿主机目录
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181      #kafka zk走自定义bridge网络，可以使用服务名或容器名
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - default
  
  nacos:
    image: nacos/nacos-server:v2.1.0
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_DB_NAME: nacos_config
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
    ports:
      - 8848:8848
      - 9848:9848
      - 9849:9849
    restart: on-failure
    networks:
      - default

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
        - "${MONGODB_HOST_PORT}:27017"
    networks:
        - default
    command:
        --auth

  adminmongo:
    image: mrvautin/adminmongo
    container_name: adminmongo
    ports:
      - "${ADMINMONGO_HOST_PORT}:1234"
    environment:
      - HOST=0.0.0.0
      - DB_HOST=mongodb
      - DB_PORT=27017
    networks:
      - default

  elasticsearch:
    build:
      context: ./services/elasticsearch
      args:
        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
    container_name: elasticsearch
    environment:
      - TZ=$TZ
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
    hostname: elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

  kibana:
    image: kibana:${KIBANA_VERSION}
    container_name: kibana
    environment:
      TZ: "$TZ"
      elasticsearch.hosts: http://elasticsearch:9200
    hostname: kibana
    depends_on:
      - elasticsearch
    restart: always
    ports:
      - "${KIBANA_HOST}:5601"

  logstash:
    image: logstash:${LOGSTASH_VERSION}
    container_name: logstash
    hostname: logstash
    restart: always
    depends_on:
      - elasticsearch
    environment:
      TZ: "$TZ"
    ports:
      - "${LOGSTASH_HOST_PORT_C}:9600"
      - "${LOGSTASH_HOST_PORT_S}:5044"

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    command: server --console-address ":9001" /data 
    ports:
      - 9000:9000
      - 9001:9001 
    volumes:
      - ./data/minio:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123456
    networks:
      - default